import React, { useEffect, useState } from 'react';
import styles from './DeliveryRequest.module.css';
import api from '../../api/axiosConfig';

const ITEMS_PER_PAGE = 10;

const DeliveryRequest = () => {
  const [invoices, setInvoices] = useState([]);
  const [currentPage, setCurrentPage] = useState(0);
  const [selectedInvoice, setSelectedInvoice] = useState(null);

  useEffect(() => {
    fetchInvoices();
  }, []);

  const fetchInvoices = async () => {
    try {
      const res = await api.get('/api/invoices');
      setInvoices(res.data || []);
    } catch (error) {
      console.error('Error fetching invoices:', error);
    }
  };

  const paginatedInvoices = invoices.slice(
    currentPage * ITEMS_PER_PAGE,
    (currentPage + 1) * ITEMS_PER_PAGE
  );

  const totalPages = Math.ceil(invoices.length / ITEMS_PER_PAGE);

  const handleCheck = (invoice) => {
    setSelectedInvoice(invoice);
  };

  const handleNext = () => {
    if (currentPage + 1 < totalPages) setCurrentPage(prev => prev + 1);
  };

  const handlePrev = () => {
    if (currentPage > 0) setCurrentPage(prev => prev - 1);
  };

  return (
    <div className={styles.page}>
      <div className={styles.header}>
        <h2>Delivery Requests</h2>
        <div className={styles.pagination}>
          <button onClick={handlePrev} disabled={currentPage === 0}>&lt;</button>
          <span>Page {currentPage + 1} of {totalPages}</span>
          <button onClick={handleNext} disabled={currentPage + 1 >= totalPages}>&gt;</button>
        </div>
      </div>

      <table className={styles.table}>
        <thead>
          <tr>
            <th>Invoice ID</th>
            <th>Product ID</th>
            <th>Product Name</th>
            <th>Description</th>
            <th>Check</th>
          </tr>
        </thead>
        <tbody>
          {paginatedInvoices.map((invoice) =>
            invoice.invoiceItems.map((item, idx) => (
              <tr key={`${invoice.invoiceId}-${idx}`}>
                <td>{invoice.invoiceId}</td>
                <td>{item.product.productId}</td>
                <td>{item.product.name}</td>
                <td>{item.product.description}</td>
                <td>
                  <button className={styles.checkBtn} onClick={() => handleCheck(invoice)}>
                    Check
                  </button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>

        {selectedInvoice && (
        <div className={styles.detailsCard}>
            <h3>Invoice Details - {selectedInvoice.invoiceId}</h3>

            <div className={styles.detailGrid}>
            <div><strong>Generated By:</strong> {selectedInvoice.generatedBy}</div>
            <div><strong>Invoice Date:</strong> {selectedInvoice.invoiceDate}</div>
            <div><strong>Notes:</strong> {selectedInvoice.notes || 'N/A'}</div>
            <div><strong>Payment Status:</strong> {selectedInvoice.paymentStatus}</div>
            <div><strong>Client ID:</strong> {selectedInvoice.client?.id}</div>
            <div><strong>Distributor ID:</strong> {selectedInvoice.distributor?.id}</div>
            </div>

            <div className={styles.productsList}>
            <h4>Products in Invoice:</h4>
            <ul>
                {selectedInvoice.invoiceItems.map((item, idx) => (
                <li key={idx}>
                    <strong>{item.product.name}</strong> â€” Qty: {item.quantity}
                </li>
                ))}
            </ul>
            </div>

            <button className={styles.sendBtn}>Send to Vehicle Department</button>
        </div>
        )}
    </div>
  );
};

export default DeliveryRequest;
